name: Java Quarkus Deployment

on:
  push:
    branches:
      - develop
  pull_request:
    types: [closed]
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Entorno de despliegue'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    steps:
      - id: set-env
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" == "pull_request" ] && [ "${{ github.event.pull_request.merged }}" == "true" ] && [ "${{ github.base_ref }}" == "main" ]; then
            echo "environment=production" >> $GITHUB_OUTPUT
          else
            echo "environment=development" >> $GITHUB_OUTPUT
          fi

  test:
    runs-on: ubuntu-latest
    needs: determine-environment
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run tests
        run: ./mvnw test

  build:
    runs-on: ubuntu-latest
    needs: [determine-environment, test]
    if: github.event_name != 'pull_request' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    environment: ${{ needs.determine-environment.outputs.environment }}
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      # Debug environment variables
      - name: Debug environment variables
        run: |
          echo "=== Debugging Environment Variables ==="
          echo "GITHUB_REF: $GITHUB_REF"
          echo "Environment: ${{ needs.determine-environment.outputs.environment }}"
          echo "AWS_REGION: ${{ vars.AWS_REGION }}"
          echo "AWS_ROLE_ARN: ${{ vars.AWS_ROLE_ARN }}"
          echo "VPC_ID: ${{ vars.VPC_ID }}"
          echo "SUBNET_IDS: ${{ vars.SUBNET_IDS }}"
          echo "SECURITY_GROUP_IDS: ${{ vars.SECURITY_GROUP_IDS }}"
          echo "MONGODB_CONNECTION_STRING is set: ${{ secrets.MONGODB_CONNECTION_STRING != '' }}"
          echo "STAGE_NAME: ${{ vars.STAGE_NAME }}"

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      # Build with Maven (Quarkus)
      - name: Build with Maven
        run: |
          ./mvnw package -Pnative \
            -Dquarkus.profile=${{ needs.determine-environment.outputs.environment }} \
            -Dquarkus.mongodb.connection-string=${{ secrets.MONGODB_CONNECTION_STRING }} \
            -Dquarkus.lambda.vpc-id=${{ vars.VPC_ID }} \
            -Dquarkus.lambda.subnet-ids=${{ vars.SUBNET_IDS }} \
            -Dquarkus.lambda.security-group-ids=${{ vars.SECURITY_GROUP_IDS }} \
            -Dquarkus.lambda.aws-region=${{ vars.AWS_REGION }}
            -Dquarkus.lambda.aws-stage=${{ vars.STAGE_NAME }}

      # Deploy to AWS Lambda
      - name: Deploy to AWS Lambda
        run: |
          ./mvnw quarkus:deploy \
            -Dquarkus.profile=${{ needs.determine-environment.outputs.environment }} \
